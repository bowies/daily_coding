package programmers;

class PCCP_기출문제_2번_퍼즐_게임_챌린지_Java_240925 {

    public int solution(int[] 난이도들, int[] 소요시간들, long 제한시간) {
        int 왼쪽 = 1;
        int 오른쪽 = 100000;
        int 정답 = 0;

        while (왼쪽 <= 오른쪽) {
            int 중간 = (왼쪽 + 오른쪽) / 2;
            if (모든퍼즐해결가능여부(중간, 난이도들, 소요시간들, 제한시간)) {
                정답 = 중간;
                오른쪽 = 중간 - 1; // 더 작은 숙련도로도 가능한지 확인하기 위해 탐색 범위를 줄임
            } else {
                왼쪽 = 중간 + 1; // 해당 숙련도로는 제한 시간 내에 해결 불가, 더 큰 숙련도 탐색
            }
        }

        return 정답;
    }

    private boolean 모든퍼즐해결가능여부(int 숙련도, int[] 난이도들, int[] 소요시간들, long 제한시간) {
        long 총시간 = 0;
        int 퍼즐개수 = 난이도들.length;

        for (int i = 0; i < 퍼즐개수; i++) {
            int 난이도 = 난이도들[i];
            int 현재소요시간 = 소요시간들[i];
            long 소요시간합 = 현재소요시간; // 기본적으로는 틀리지 않을 때 소요 시간

            if (난이도 > 숙련도) {
                // 틀린 횟수 = 난이도 - 숙련도
                int 이전소요시간 = i == 0 ? 0 : 소요시간들[i - 1]; // 이전 퍼즐의 소요 시간
                int 틀린횟수 = 난이도 - 숙련도;
                // 틀릴 때마다 현재 퍼즐 시간과 이전 퍼즐 시간 추가
                소요시간합 += (현재소요시간 + 이전소요시간) * 틀린횟수;
            }

            총시간 += 소요시간합;

            if (총시간 > 제한시간) {
                return false; // 제한 시간을 초과하면 실패
            }
        }

        return 총시간 <= 제한시간;
    }
}
